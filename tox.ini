[tox]
envlist =
    py27,
    py35,
    py36,
    py37,
    lint-py27,
    lint-py37,
    coverage-report,

[testenv]
skip_install = true
commands =
    {envbindir}/buildout -c {toxinidir}/buildout.cfg buildout:directory={envdir} buildout:develop={toxinidir} bootstrap
    {envbindir}/buildout -c {toxinidir}/buildout.cfg buildout:directory={envdir} buildout:develop={toxinidir} install test
    coverage run {envbindir}/test --all {posargs:-vc}
deps =
    zc.buildout
    coverage

setenv =
    COVERAGE_FILE=.coverage.{envname}

[testenv:coverage-report]
basepython = python2.7
deps = coverage
setenv =
    COVERAGE_FILE=.coverage
skip_install = true
commands =
    coverage erase
    coverage combine
    coverage html -i
    coverage xml -i
    coverage report -i --fail-under=92

[testenv:isort-apply]
basepython = python3.7
skip_install = true
deps =
    isort

commands =
    isort --apply --recursive {toxinidir}/src setup.py {posargs}

[lint]
skip_install = true

deps =
    isort
    flake8
    # helper to generate HTML reports:
    flake8-html
    # Useful flake8 plugins that are Python and Plone specific:
    flake8-coding
    flake8-debugger
    flake8-deprecated
    flake8-pytest
    flake8-todo
    flake8-isort
    mccabe
    # Potential flake8 plugins that should be used:  # TBD
    #flake8-blind-except
    #flake8-commas
    #flake8-docstrings
    #flake8-mypy
    #flake8-pep3101
    #flake8-plone-hasattr
    #flake8-string-format
    #flake8_strict
    #flake8-quotes

commands =
    mkdir -p {toxinidir}/_build/flake8
    isort --check-only --recursive {toxinidir}/src setup.py
    - flake8 --format=html --htmldir={toxinidir}/_build/flake8 --doctests src setup.py
    flake8 src tests setup.py --doctests

whitelist_externals =
    mkdir

[testenv:lint-py27]
basepython = python2.7
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
whitelist_externals = {[lint]whitelist_externals}

[testenv:lint-py37]
basepython = python3.7
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
whitelist_externals = {[lint]whitelist_externals}
