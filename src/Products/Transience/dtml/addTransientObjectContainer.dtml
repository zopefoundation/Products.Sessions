<dtml-var manage_page_header>

<main class="container-fluid">

	<dtml-var "manage_form_title(this(), _, form_title='Add Transient Object Container' )">

	<p class="form-help">
		Transient Object Containers are used to store transient data.
		Transient data will persist, but only for a user-specified period of time,
		(the "data object timeout") after which it will be flushed.
		<br />
		It is recommended that Transient Object Containers be added to storages which
		do not support undo operations; transient objects are write-intensive;
		their use may cause many undoable transactions, potentially bloating
		undoing ZODB databases.
		<br />
		Transient Object Containers support <strong>Add and Delete Scripts</strong> 
		which are methods which are invoked when transient objects are added or 
		deleted from the container. A add/delete script is invoked with the item being
		operated upon and the transient object container as arguments. Specify
		the Zope physical path to the method to be invoked to receive the notification
		(e.g. '/folder/add_notifier').
	</p>

	<form action="constructTransientObjectContainer" method="post">

		<div class="form-group row">
			<label for="id" class="form-label col-sm-3 col-md-2">Id</label>
			<div class="col-sm-9 col-md-10">
				<input id="id" name="id" class="form-control " type="text" />
			</div>
		</div>

		<div class="form-group row">
			<label for="title" class="col-sm-3 col-md-2">Title</label>
			<div class="col-sm-9 col-md-10">
				<input id="title" class="form-control" type="text" name="title" />
				<small class="text-muted">optional</small>
			</div>
		</div>

		<div class="form-group row">
			<label for="timeout_mins" class="col-sm-3 col-md-2">Timeout</label>
			<div class="col-sm-9 col-md-10">
				<input id="timeout_mins" class="form-control" type="text" name="timeout_mins:int" value="20" />
				<small class="text-muted">Data object timeout in minutes, <em>0</em> means <em>no expiration</em></small>
			</div>
		</div>

		<div class="form-group row">
			<label for="period_secs" class="col-sm-3 col-md-2">Resolution</label>
			<div class="col-sm-9 col-md-10">
				<input id="period_secs" class="form-control" type="text" name="period_secs:int" value="20" />
				<small class="text-muted">Timeout resolution in seconds (accept the default if you're not sure) 
					<a href="#period_secs_help" onclick="$('#period_secs_help').toggle()"> [ ... ] </a>
					<span id="period_secs_help" style="display:none;">Defines what the <em>resolution</em> of item 
					timeout is. Setting this higher allows the transience machinery to do fewer <em>writes</em> 
					at the expense of causing items to time out later than the <em>Data object timeout value</em> 
					by a factor of (at most) this many seconds. This number must divide evenly into the 
					number of timeout seconds (<em>Data object timeout value</em> * 60) and  cannot be set higher 
					than the timeout value in seconds.
					</span>
				</small>
			</div>
		</div>

		<div class="form-group row">
			<label for="limit" class="col-sm-3 col-md-2">Limit</label>
			<div class="col-sm-9 col-md-10">
				<input id="limit" class="form-control" type="text" name="limit:int" value="1000" />
				<small class="text-muted">Maximum number of subobjects; <em>0</em> means <em>infinite</em></small>
			</div>
		</div>

		<div class="form-group row">
			<label for="addNotification" class="col-sm-3 col-md-2">Add-Notice</label>
			<div class="col-sm-9 col-md-10">
				<input id="addNotification" class="form-control" type="text" name="addNotification" />
				<small class="text-muted">Script to call upon object add (optional), e.g. <em>/somefolder/addScript</em></small>
			</div>
		</div>

		<div class="form-group row">
			<label for="delNotification" class="col-sm-3 col-md-2">Delete-Notice</label>
			<div class="col-sm-9 col-md-10">
				<input id="delNotification" class="form-control" type="text" name="delNotification" />
				<small class="text-muted">Script to call upon object delete (optional), e.g. <em>/somefolder/delScript</em></small>
			</div>
		</div>

		<div class="zmi-controls">
			<input class="btn btn-primary" type="submit" name="submit" value="Add" />
		</div>
		
	</form>

</main>

<dtml-var manage_page_footer>
